program
  version
    OPENQASM
    3
    ;
  statementOrScope
    statement
      includeStatement
        include
        "stdgates.inc"
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
          designator
            [
            expression
              3
            ]
        my_var
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
        my_var
        =
        declarationExpression
          expression
            "1"
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
          designator
            [
            expression
              8
            ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
          designator
            [
            expression
              8
            ]
        my_var
        =
        declarationExpression
          expression
            "00001111"
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          uint
          designator
            [
            expression
              16
            ]
        my_var
        =
        declarationExpression
          expression
            10
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          uint
          designator
            [
            expression
              16
            ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          uint
        my_var
        =
        declarationExpression
          expression
            10
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          uint
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          int
          designator
            [
            expression
              16
            ]
        my_var
        =
        declarationExpression
          expression
            10
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          int
          designator
            [
            expression
              16
            ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          int
        my_var
        =
        declarationExpression
          expression
            10
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          int
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          float
          designator
            [
            expression
              16
            ]
        my_var
        =
        declarationExpression
          expression
            pi
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          float
          designator
            [
            expression
              16
            ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          float
        my_var
        =
        declarationExpression
          expression
            2.3
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          float
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          angle
          designator
            [
            expression
              16
            ]
        my_var
        =
        declarationExpression
          expression
            pi
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          angle
          designator
            [
            expression
              16
            ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          angle
        my_var
        =
        declarationExpression
          expression
            pi
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          angle
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          complex
          [
          scalarType
            float
            designator
              [
              expression
                16
              ]
          ]
        my_var
        =
        declarationExpression
          expression
            pi
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          complex
          [
          scalarType
            float
            designator
              [
              expression
                16
              ]
          ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          complex
          [
          scalarType
            float
          ]
        my_var
        =
        declarationExpression
          expression
            2.3
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          complex
          [
          scalarType
            float
          ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bool
        my_var
        =
        declarationExpression
          expression
            true
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bool
        my_var
        =
        declarationExpression
          expression
            false
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bool
        my_var
        ;
  statementOrScope
    statement
      constDeclarationStatement
        const
        scalarType
          uint
        my_var
        =
        declarationExpression
          expression
            32
        ;
  statementOrScope
    statement
      constDeclarationStatement
        const
        scalarType
          float
          designator
            [
            expression
              32
            ]
        my_var
        =
        declarationExpression
          expression
            2.5
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        arrayType
          array
          [
          scalarType
            int
            designator
              [
              expression
                32
              ]
          ,
          expressionList
            expression
              5
          ]
        my_var
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        arrayType
          array
          [
          scalarType
            int
            designator
              [
              expression
                32
              ]
          ,
          expressionList
            expression
              5
          ]
        my_var
        =
        declarationExpression
          arrayLiteral
            {
            expression
              0
            ,
            expression
              1
            ,
            expression
              2
            ,
            expression
              3
            ,
            expression
              4
            }
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        arrayType
          array
          [
          scalarType
            float
            designator
              [
              expression
                32
              ]
          ,
          expressionList
            expression
              3
            ,
            expression
              2
          ]
        my_var
        =
        declarationExpression
          arrayLiteral
            {
            arrayLiteral
              {
              expression
                1.1
              ,
              expression
                1.2
              }
            ,
            arrayLiteral
              {
              expression
                2.1
              ,
              expression
                2.2
              }
            ,
            arrayLiteral
              {
              expression
                3.1
              ,
              expression
                3.2
              }
            }
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
          designator
            [
            expression
              5
            ]
        q
        ;
  statementOrScope
    statement
      aliasDeclarationStatement
        let
        my_var
        =
        aliasExpression
          expression
            expression
              q
            indexOperator
              [
              rangeExpression
                expression
                  1
                :
                expression
                  4
              ]
        ;
  <EOF>