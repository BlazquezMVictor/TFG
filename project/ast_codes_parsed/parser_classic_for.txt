program
  version
    OPENQASM
    3
    ;
  statementOrScope
    statement
      includeStatement
        include
        "stdgates.inc"
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          int
          designator
            [
            expression
              32
            ]
        d
        =
        declarationExpression
          expression
            0
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
          designator
            [
            expression
              5
            ]
        targets
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
          designator
            [
            expression
              5
            ]
        controls
        ;
  statementOrScope
    statement
      forStatement
        for
        scalarType
          int
          designator
            [
            expression
              32
            ]
        i
        in
        setExpression
          {
          expression
            1
          ,
          expression
            5
          ,
          expression
            10
          }
        statementOrScope
          scope
            {
            statementOrScope
              statement
                ifStatement
                  if
                  (
                  expression
                    expression
                      i
                    ==
                    expression
                      1
                  )
                  statementOrScope
                    scope
                      {
                      statementOrScope
                        statement
                          assignmentStatement
                            indexedIdentifier
                              d
                            +=
                            expression
                              5
                            ;
                      }
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    d
                  +=
                  expression
                    1
                  ;
            }
  statementOrScope
    statement
      forStatement
        for
        scalarType
          int
        i
        in
        [
        rangeExpression
          expression
            0
          :
          expression
            2
          :
          expression
            20
        ]
        statementOrScope
          scope
            {
            statementOrScope
              statement
                gateCallStatement
                  x
                  gateOperandList
                    gateOperand
                      indexedIdentifier
                        targets
                        indexOperator
                          [
                          expression
                            0
                          ]
                  ;
            }
  statementOrScope
    statement
      forStatement
        for
        scalarType
          uint
          designator
            [
            expression
              64
            ]
        i
        in
        [
        rangeExpression
          expression
            4294967296
          :
          expression
            4294967306
        ]
        statementOrScope
          scope
            {
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    d
                  +=
                  expression
                    1
                  ;
            }
  statementOrScope
    statement
      classicalDeclarationStatement
        arrayType
          array
          [
          scalarType
            float
            designator
              [
              expression
                64
              ]
          ,
          expressionList
            expression
              4
          ]
        my_floats
        =
        declarationExpression
          arrayLiteral
            {
            expression
              1.2
            ,
            expression
              -
              expression
                3.4
            ,
            expression
              0.5
            ,
            expression
              9.8
            }
        ;
  statementOrScope
    statement
      forStatement
        for
        scalarType
          float
          designator
            [
            expression
              64
            ]
        f
        in
        expression
          my_floats
        statementOrScope
          scope
            {
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    d
                  +=
                  expression
                    1
                  ;
            }
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
          designator
            [
            expression
              5
            ]
        register
        ;
  statementOrScope
    statement
      forStatement
        for
        scalarType
          bit
        b
        in
        expression
          register
        statementOrScope
          scope
            {
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    d
                  +=
                  expression
                    1
                  ;
            }
  statementOrScope
    statement
      aliasDeclarationStatement
        let
        alias
        =
        aliasExpression
          expression
            expression
              register
            indexOperator
              [
              rangeExpression
                expression
                  1
                :
                expression
                  3
              ]
        ;
  statementOrScope
    statement
      forStatement
        for
        scalarType
          bit
        b
        in
        expression
          alias
        statementOrScope
          scope
            {
            }
  <EOF>