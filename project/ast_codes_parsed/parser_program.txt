program
  version
    OPENQASM
    3.0
    ;
  statementOrScope
    statement
      includeStatement
        include
        "stdgates.inc"
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          float
          designator
            [
            expression
              64
            ]
        a
        =
        declarationExpression
          expression
            10
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
          designator
            [
            expression
              3
            ]
        q
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
          designator
            [
            expression
              2
            ]
        mid
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
          designator
            [
            expression
              3
            ]
        out
        ;
  statementOrScope
    statement
      aliasDeclarationStatement
        let
        aliased
        =
        aliasExpression
          expression
            expression
              q
            indexOperator
              [
              rangeExpression
                expression
                  0
                :
                expression
                  1
              ]
        ;
  statementOrScope
    statement
      gateStatement
        gate
        my_gate
        (
        identifierList
          a
        )
        identifierList
          c
          ,
          t
        scope
          {
          statementOrScope
            statement
              gateCallStatement
                ry
                (
                expressionList
                  expression
                    a
                )
                gateOperandList
                  gateOperand
                    indexedIdentifier
                      c
                ;
          statementOrScope
            statement
              gateCallStatement
                cx
                gateOperandList
                  gateOperand
                    indexedIdentifier
                      c
                  ,
                  gateOperand
                    indexedIdentifier
                      t
                ;
          }
  statementOrScope
    statement
      gateStatement
        gate
        my_phase
        (
        identifierList
          a
        )
        identifierList
          c
        scope
          {
          statementOrScope
            statement
              gateCallStatement
                gateModifier
                  ctrl
                  @
                rz
                (
                expressionList
                  expression
                    a
                )
                gateOperandList
                  gateOperand
                    indexedIdentifier
                      c
                ;
          }
  statementOrScope
    statement
      gateCallStatement
        my_gate
        (
        expressionList
          expression
            expression
              a
            *
            expression
              2
        )
        gateOperandList
          gateOperand
            indexedIdentifier
              q
              indexOperator
                [
                expression
                  0
                ]
          ,
          gateOperand
            indexedIdentifier
              q
              indexOperator
                [
                expression
                  0
                ]
        ;
  statementOrScope
    statement
      assignmentStatement
        indexedIdentifier
          mid
          indexOperator
            [
            expression
              0
            ]
        =
        measureExpression
          measure
          gateOperand
            indexedIdentifier
              q
              indexOperator
                [
                expression
                  0
                ]
        ;
  statementOrScope
    statement
      assignmentStatement
        indexedIdentifier
          mid
          indexOperator
            [
            expression
              1
            ]
        =
        measureExpression
          measure
          gateOperand
            indexedIdentifier
              q
              indexOperator
                [
                expression
                  1
                ]
        ;
  statementOrScope
    statement
      whileStatement
        while
        (
        expression
          expression
            mid
          ==
          expression
            "00"
        )
        statementOrScope
          scope
            {
            statementOrScope
              statement
                resetStatement
                  reset
                  gateOperand
                    indexedIdentifier
                      q
                      indexOperator
                        [
                        expression
                          0
                        ]
                  ;
            statementOrScope
              statement
                resetStatement
                  reset
                  gateOperand
                    indexedIdentifier
                      q
                      indexOperator
                        [
                        expression
                          1
                        ]
                  ;
            statementOrScope
              statement
                gateCallStatement
                  my_gate
                  (
                  expressionList
                    expression
                      a
                  )
                  gateOperandList
                    gateOperand
                      indexedIdentifier
                        q
                        indexOperator
                          [
                          expression
                            0
                          ]
                    ,
                    gateOperand
                      indexedIdentifier
                        q
                        indexOperator
                          [
                          expression
                            1
                          ]
                  ;
            statementOrScope
              statement
                gateCallStatement
                  my_phase
                  (
                  expressionList
                    expression
                      expression
                        a
                      -
                      expression
                        expression
                          pi
                        /
                        expression
                          2
                  )
                  gateOperandList
                    gateOperand
                      indexedIdentifier
                        q
                        indexOperator
                          [
                          expression
                            1
                          ]
                  ;
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    mid
                    indexOperator
                      [
                      expression
                        0
                      ]
                  =
                  measureExpression
                    measure
                    gateOperand
                      indexedIdentifier
                        q
                        indexOperator
                          [
                          expression
                            0
                          ]
                  ;
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    mid
                    indexOperator
                      [
                      expression
                        1
                      ]
                  =
                  measureExpression
                    measure
                    gateOperand
                      indexedIdentifier
                        q
                        indexOperator
                          [
                          expression
                            1
                          ]
                  ;
            }
  statementOrScope
    statement
      ifStatement
        if
        (
        expression
          expression
            mid
          indexOperator
            [
            expression
              0
            ]
        )
        statementOrScope
          scope
            {
            statementOrScope
              statement
                aliasDeclarationStatement
                  let
                  inner_alias
                  =
                  aliasExpression
                    expression
                      expression
                        q
                      indexOperator
                        [
                        rangeExpression
                          expression
                            0
                          :
                          expression
                            1
                        ]
                  ;
            }
  statementOrScope
    statement
      assignmentStatement
        indexedIdentifier
          out
        =
        measureExpression
          measure
          gateOperand
            indexedIdentifier
              q
        ;
  <EOF>