program
  version
    OPENQASM
    3
    ;
  statementOrScope
    statement
      includeStatement
        include
        "stdgates.inc"
        ;
  statementOrScope
    statement
      constDeclarationStatement
        const
        scalarType
          int
          designator
            [
            expression
              32
            ]
        n_pairs
        =
        declarationExpression
          expression
            10
        ;
  statementOrScope
    statement
      defStatement
        def
        bellprep
        (
        argumentDefinitionList
          argumentDefinition
            qubitType
              qubit
              designator
                [
                expression
                  2
                ]
            q
        )
        scope
          {
          statementOrScope
            statement
              resetStatement
                reset
                gateOperand
                  indexedIdentifier
                    q
                ;
          statementOrScope
            statement
              gateCallStatement
                h
                gateOperandList
                  gateOperand
                    indexedIdentifier
                      q
                      indexOperator
                        [
                        expression
                          0
                        ]
                ;
          statementOrScope
            statement
              gateCallStatement
                cx
                gateOperandList
                  gateOperand
                    indexedIdentifier
                      q
                      indexOperator
                        [
                        expression
                          0
                        ]
                  ,
                  gateOperand
                    indexedIdentifier
                      q
                      indexOperator
                        [
                        expression
                          1
                        ]
                ;
          }
  statementOrScope
    statement
      defStatement
        def
        xprepare
        (
        argumentDefinitionList
          argumentDefinition
            qubitType
              qubit
            q
        )
        scope
          {
          statementOrScope
            statement
              resetStatement
                reset
                gateOperand
                  indexedIdentifier
                    q
                ;
          statementOrScope
            statement
              gateCallStatement
                h
                gateOperandList
                  gateOperand
                    indexedIdentifier
                      q
                ;
          }
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
        input_qubit
        ;
  statementOrScope
    statement
      classicalDeclarationStatement
        scalarType
          bit
        output_qubit
        ;
  statementOrScope
    statement
      quantumDeclarationStatement
        qubitType
          qubit
          designator
            [
            expression
              expression
                2
              *
              expression
                n_pairs
            ]
        q
        ;
  statementOrScope
    statement
      expressionStatement
        expression
          xprepare
          (
          expressionList
            expression
              input_qubit
          )
        ;
  statementOrScope
    statement
      gateCallStatement
        rz
        (
        expressionList
          expression
            expression
              pi
            /
            expression
              4
        )
        gateOperandList
          gateOperand
            indexedIdentifier
              input_qubit
        ;
  statementOrScope
    statement
      aliasDeclarationStatement
        let
        io
        =
        aliasExpression
          expression
            input_qubit
        ;
  statementOrScope
    statement
      forStatement
        for
        scalarType
          uint
        i
        in
        [
        rangeExpression
          expression
            0
          :
          expression
            expression
              n_pairs
            -
            expression
              1
        ]
        statementOrScope
          scope
            {
            statementOrScope
              statement
                aliasDeclarationStatement
                  let
                  bp
                  =
                  aliasExpression
                    expression
                      expression
                        q
                      indexOperator
                        [
                        setExpression
                          {
                          expression
                            expression
                              2
                            *
                            expression
                              i
                          ,
                          expression
                            expression
                              expression
                                2
                              *
                              expression
                                i
                            +
                            expression
                              1
                          }
                        ]
                  ;
            statementOrScope
              statement
                classicalDeclarationStatement
                  scalarType
                    bit
                    designator
                      [
                      expression
                        2
                      ]
                  pf
                  ;
            statementOrScope
              statement
                gateCallStatement
                  bellprep
                  gateOperandList
                    gateOperand
                      indexedIdentifier
                        bp
                  ;
            statementOrScope
              statement
                gateCallStatement
                  cx
                  gateOperandList
                    gateOperand
                      indexedIdentifier
                        io
                    ,
                    gateOperand
                      indexedIdentifier
                        bp
                        indexOperator
                          [
                          expression
                            0
                          ]
                  ;
            statementOrScope
              statement
                gateCallStatement
                  h
                  gateOperandList
                    gateOperand
                      indexedIdentifier
                        io
                  ;
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    pf
                    indexOperator
                      [
                      expression
                        0
                      ]
                  =
                  measureExpression
                    measure
                    gateOperand
                      indexedIdentifier
                        io
                  ;
            statementOrScope
              statement
                assignmentStatement
                  indexedIdentifier
                    pf
                    indexOperator
                      [
                      expression
                        1
                      ]
                  =
                  measureExpression
                    measure
                    gateOperand
                      indexedIdentifier
                        bp
                        indexOperator
                          [
                          expression
                            0
                          ]
                  ;
            statementOrScope
              statement
                ifStatement
                  if
                  (
                  expression
                    expression
                      expression
                        pf
                      indexOperator
                        [
                        expression
                          0
                        ]
                    ==
                    expression
                      1
                  )
                  statementOrScope
                    statement
                      gateCallStatement
                        z
                        gateOperandList
                          gateOperand
                            indexedIdentifier
                              bp
                              indexOperator
                                [
                                expression
                                  1
                                ]
                        ;
            statementOrScope
              statement
                ifStatement
                  if
                  (
                  expression
                    expression
                      expression
                        pf
                      indexOperator
                        [
                        expression
                          1
                        ]
                    ==
                    expression
                      1
                  )
                  statementOrScope
                    statement
                      gateCallStatement
                        x
                        gateOperandList
                          gateOperand
                            indexedIdentifier
                              bp
                              indexOperator
                                [
                                expression
                                  1
                                ]
                        ;
            statementOrScope
              statement
                aliasDeclarationStatement
                  let
                  io
                  =
                  aliasExpression
                    expression
                      expression
                        bp
                      indexOperator
                        [
                        expression
                          1
                        ]
                  ;
            }
  statementOrScope
    statement
      gateCallStatement
        h
        gateOperandList
          gateOperand
            indexedIdentifier
              io
        ;
  statementOrScope
    statement
      assignmentStatement
        indexedIdentifier
          output_qubit
        =
        measureExpression
          measure
          gateOperand
            indexedIdentifier
              io
        ;
  <EOF>

